Full-Stack Developer: (Front-end + Back-end + Database)
Full-Stack Engineer: (Front-end + Back-end + Database + DevOps)



SDLC:
---------------------------------------
--> Requirement Gathering and Analysis
--> Planning
--> Coding
--> Building
--> Testing
--> Release/deployment
--> Maintainence and Monitoring


Plan --> JIRA
Code --> Eclipse, IntelliJ, VS Code, Git, Github, Gitlab
Build --> Maven, Gradle, Jenkins, Ant
Test --> JUnit, TestNG, Selenium, Cucumber, Appium, JBehave, TestRail, TestLink, Mockito, Jest
Release --> Jenkins, TeamCity, Bamboo
Deploy --> Docker, Kubernetes, AWS, Azure, Google Cloud, Heroku, Digital Ocean, OpenShift, Containerd
Operate --> Kubernetes, Ansible
Monitor --> Grafana, Splunk


----------------------------------------------------------------------------
SDLC models:
1. Waterfall model: 
2. Spiral
3. V-Model
4. Agile model: The meaning of Agile is swift or versatile.

-----------------------------------------------------------------------------
Waterfall works phase wise for the whole project, if one phase is completed then only move to the next phase.
Agile works phase wise for smaller parts of the project, if one phase is completed then only move to the next phase.

----------------------------------------------------------------------------
Difference between Waterfall and Agile model:
Waterfall model:
- Linear and sequential approach
- Each phase is completed before moving to the next phase
- No change in the requirement once the project is started
Agile model:
- Iterative and incremental approach
- Each phase is completed before moving to the next phase
- Change in the requirement is allowed during the project



---------------------------------------------------------------------------------------------
SCRUM: 
- It is a framework for project management that emphasizes teamwork, accountability, and iterative progress toward well-defined goals.
Kanban:
- It is a visual system for managing work, emphasizing continuous flow and limiting work in progress.
XP:
- It is a software development methodology that emphasizes technical practices, collaboration, and continuous improvement.

--------------------------------------------------------------------------------------------
SCRUM Meeting --> Weekly
SCRUM Master  --> Facilitate the meeting and ensure that the team is following the SCRUM framework.
Standup Meeting --> Daily ( short meeting around 15 minutes thus called Standup meeting)
Product Owner --> Responsible for the product backlog and ensuring that the team has a clear understanding of the requirements
Backlog --> List of features or user stories that need to be implemented.
Stakeholders --> Everyone who is involved in the product innovation to execution.


SCM(Source Code Management):
-------------------------------------------
--> GIT, Perforce, Rational ClearCase, Mercurial
--> Able to track changes
--> Keep history
--> Identify who changed 
-->  Helps in collaboration


        Git                                v/s                      Github          
    Client                                                          Server
    CLI                                                              GUI
|Working Area | Staging Area | Local Repository |           | Remote Repository |


---------------------------------- Git Commands ---------------------------------
git diff --> shows the difference between the two versions of the file
git show --> shows the commit history
git checkout --> switch between branches
git branch --> create a new branch
git diff hash1 hash2 --> shows the difference between two commits
git status --> shows the status of the repository
git log --> shows the commit history (q to quit)
git reflog --> shows the reflog history (q to quit)
git branch -d branchname / git branch --delete branchname --> delete a branch(cannot delete the working branch)
git tag v3.1 --> create a tag. A tag is a reference to a commit.
git tag -l v3.* --> list all the tags that match the pattern v3.*

if a branch is deleted then it's sub branches will not be deleted, and they will be attached to the parent branch of the deleted branch.



------------------------------------Trunk Based Development---------------------------------
Trunk Based Development is a type of branching strategy that involves merging changes from multiple branches into a central trunk or main branch. This approach is often used in Agile development methodologies. The key characteristics of Trunk Based Development are:
- The trunk is the main branch that contains the latest code.
- All changes are merged into the trunk.
- The trunk is always in a releasable state.
- The trunk is the only branch that is used for production deployment.
- All other branches are feature branches that are created from the trunk and merged back into the trunk when complete.
- The trunk is protected by automated tests and continuous integration.


Git Flow vs Github Flow:
---------------------------
Git Flow is a branching strategy that was developed by Vincent Driessen. It is a more complex branching strategy that involves multiple branches, including a master branch, a develop branch, and feature branches.
Github Flow is a simpler branching strategy that was developed by GitHub. It is based on the idea of trunk-based development and involves a main branch, called the master branch and a feature branch that is created from the master branch.


What is Dev-Ops?
--------------------
--> DevOps is a set of practices that combines software development (Dev) and IT operations (Ops) to improve the speed, quality, and reliability of software releases and deployments. It aims to bridge the gap between development and operations teams, enabling them to work together more effectively and efficiently. 