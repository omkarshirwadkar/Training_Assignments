--------------------------Morning Session-------------------------------

------------------------Exception Handling-------------------------------

Error:
--> Compile Time Error: Syntactical Error
--> Runtime Error: Logical Error
    --> Error
    --> Exception

--> Error cannot be handled in runtime , but exception can be handled in runtime.

Exception:
--> Exception is a runtime error.
1. Checked Exception: Compile Time Exception
   --> Checked exceptions are the exceptions that are checked at compile-time. 
   --> This means that the compiler verifies that the code handles these exceptions either by catching them or declaring them in the method signature using the throws keyword. 
   --> Examples of checked exceptions include: IOException, SQLException, ParseException, ClassNotFoundException.
2. Unchecked Exception: Runtime Exception
   --> Unchecked exceptions, also known as runtime exceptions, are not checked at compile-time. 
   --> These exceptions usually occur due to programming errors, such as logic errors or incorrect assumptions in the code. 
   They do not need to be declared in the method signature using the throws keyword, making it optional to handle them. 
   --> Examples of unchecked exceptions include: NullPointerException, ArithmeticException, ArrayIndexOutOfBoundsException, ClassCastException.



Keywords: try, catch, finally, throw, throws
1. try (helmet): This block contains the code that might throw an exception.
2. catch (accident): This block contains the code that will be executed if an exception is thrown in the try block.
   --> catch block can be used multiple times to handle different types of exceptions.
   --> catch block can be used with a specific exception type or with a general exception type (Exception e).
3. finally(insurance): This block contains the code that will be executed regardless of whether an exception is thrown or not.
   --> Even if we write return statement in try block, finally block will be executed.
   --> System.exit(0) will not execute finally block.
   --> finally block in Java can be used to put "cleanup" code such as closing a file, closing connection, etc.
   --> finally block can be used to release system resources.
4. throw: This keyword is used to throw an exception.
   --> Manually raise an exception using throw keyword.
   --> Anti-Pattern 
5. throws: This keyword is used to declare that a method might throw a certain exception.
   --> Declare that a method might throw a certain exception using throws keyword.
   --> It forces the caller to handle the declared exceptions.

How to identify if a given exception is checked or unchecked without running a program?
--> Checked Exception: If the exception is a subclass of Exception class, then it is a checked exception.
--> Unchecked Exception: If the exception is a subclass of RuntimeException class, then it is an unchecked exception.


JVM Exception Handler:
--> prints Stack trace
--> prints the name and reason behind the exception
--> terminates the program

Making your own exception class:
--> extend Exception class or RuntimeException class
--> override the toString() method to provide a meaningful error message
--> use the constructor to initialize the exception with a meaningful error message
--> use the exception class in your code to throw the exception
--> minimum 2 methods: one for the constructor and one for the toString() method
class UserException extends Exception {
    public UserException(){
        super();
    }
    public UserException(String msg) {
        super(msg);
    }
    public void display(){
        System.out.println("UserException display method.");
    }
}

Unchecked Exception are not required to be passed to the caller, but checked exceptions are required to be passed to the caller.
Unchecked Exceptions are automatically passed.


try should be pair with catch and finally. If you have a try block, you must have a catch block or a finally block. If you have a catch block, you must have a try block. If you have a finally block, you must have a try block.
Order should be try -catch-finally.
There can't be any statement between try and catch block or between catch and finally block.

catch block exceptions should be ordered from most specific to least specific that is from subclass to superclass.


--------------Assignment------------------
Enter Number Only
Age between 18 and 60 Only
Enter correct choice