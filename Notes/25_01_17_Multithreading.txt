-------------------------------------Morning Session--------------------------------------
Assignment Implementation:
--> CEO as Singleton class
--> Add Factory Pattern for each Employee sub class
--> Use Abstract Factory for creating Employee objects
--> Template CEO and then the rest
--> Iterator Implementation for Employee objects



--------------------------------Multi-Threading-----------------------------------
Multithreading:
Every Process needs it's own set of resources, but threads share the same memory space. So, we can use threads to improve the performance of our program. We can use the following methods to implement multithreading:

--> Start method : This method is used to start a new thread. It takes a Runnable object as a parameter.
--> Run method : This method is used to execute the code in a thread. It is called when the start method is called.
--> main method : This method is used to start the main thread of the program.
--> sleep method : This method is used to pause the execution of a thread for a specified amount of time in milliseconds.
--> yeild method : This method is used to give up the CPU to other threads in the same process.
--> stop method : This method is used to stop a thread. It is not recommended to use this method as it can cause the thread to be in an inconsistent state.
--> join method : This method is used to wait for a thread to finish its execution.
--> daemon method : This method is used to set a thread as a daemon thread. A daemon thread is a thread that runs in the background and does not prevent the JVM from exiting.
--> daemon thread: Background thread with lower priority than normal threads.

A running thread cannot be converted into a daemon thread or vice versa. 


1.  **Thread Class**: This is the most basic way to create a thread. We can create a new thread by extending the Thread class and overriding the run() method.
2.  **Runnable Interface**: This is another way to create a thread. We can create a new thread by implementing the Runnable interface and overriding the run() method.
3.  **Thread Pool**: This is a group of threads that are used to execute tasks.

Wait() and notify() are methods of the Object class. They are used to synchronize threads. The wait() method is used to make a thread wait until it is notified by another thread. The notify() method is used to notify a thread that is waiting.
This can only be used in a synchronized block.

suspend () and resume() are methods of the Thread class. They are used to suspend and resume a thread . The suspend() method is used to suspend a thread. The resume() method is used to resume a thread.
suspend and resume are deprecated.
This can be used in a non-synchronized block.


--> Multiple threads of a single class can be created.
--> Multiple threads of a single object can be created.


Multithreading          v/s             Multitasking
--------------                        ---------------
Single Process                         Multiple Processes
Resource Sharing                       Dedicated Resources
Faster Switching                       Slower Switching


Assignment:
Bike Racing Game
10 Bikers with a name
There should be countdown 10, 9, 8, .... GO
Every biker when readhing fnish line mark their end time and ranking
Display the bikers list in ascending order of their finish rankings
Display ranking along with start time end time and time taken
